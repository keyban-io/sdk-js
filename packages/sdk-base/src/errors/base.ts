/**
 * Interface representing the base structure for Keyban errors.
 *
 * @template T - The enum type of the specific error.
 */
export interface KeybanBaseError<T> {
  /**
   * A URI reference that identifies the problem type. This member is mandatory and provides a machine-readable identifier for the error.
   */
  type: string;

  /**
   * A short, human-readable summary of the problem type. It should remain consistent across occurrences of the problem except for localization purposes.
   */
  title: string;

  /**
   * The HTTP status code generated by the origin server for this occurrence of the problem. It is a numeric value and is included for the convenience of the client.
   */
  status: number | null;

  /**
   * A human-readable explanation specific to this occurrence of the problem. This field helps the client understand and potentially correct the issue
   */
  detail: string;

  /**
   * A URI reference that identifies the specific occurrence of the problem. This provides a unique identifier for the particular instance of the error.
   */
  instance: string;

  /**
   * A string recording the exact date and time when the exception occurred, in the ISO8601 format ( YYYY-MM-DDTHH:mm:ss.sssZ).
   */
  timestamp: string;

  /**
   * The original error instance, if any.
   */
  rootError: Error | null;

  /**
   * Gets a detailed description for a given error type.
   *
   * @param errorType - The type of the specific error.
   * @returns A human-readable description of the error.
   */
  getDescription: (errorType: T) => string;
}
