{"version":3,"sources":["../node_modules/@protobufjs/aspromise/index.js","../node_modules/@protobufjs/base64/index.js","../node_modules/@protobufjs/eventemitter/index.js","../node_modules/@protobufjs/float/index.js","../node_modules/@protobufjs/inquire/index.js","../node_modules/@protobufjs/utf8/index.js","../node_modules/@protobufjs/pool/index.js","../node_modules/protobufjs/src/util/longbits.js","../node_modules/protobufjs/src/util/minimal.js","../node_modules/protobufjs/src/writer.js","../node_modules/protobufjs/src/writer_buffer.js","../node_modules/protobufjs/src/reader.js","../node_modules/protobufjs/src/reader_buffer.js","../node_modules/protobufjs/src/rpc/service.js","../node_modules/protobufjs/src/rpc.js","../node_modules/protobufjs/src/roots.js","../node_modules/protobufjs/src/index-minimal.js","../node_modules/protobufjs/minimal.js","../compiled/index.js"],"names":["require_aspromise","__commonJSMin","exports","module","asPromise","fn","ctx","params","offset","index","pending","resolve","reject","err","require_base64","base64","string","p","b64","s64","i","buffer","start","end","parts","chunk","j","t","b","invalidEncoding","c","require_eventemitter","EventEmitter","evt","listeners","args","require_float","factory","f32","f8b","le","writeFloat_f32_cpy","val","buf","pos","writeFloat_f32_rev","readFloat_f32_cpy","readFloat_f32_rev","writeFloat_ieee754","writeUint","sign","exponent","mantissa","writeUintLE","writeUintBE","readFloat_ieee754","readUint","uint","readUintLE","readUintBE","f64","writeDouble_f64_cpy","writeDouble_f64_rev","readDouble_f64_cpy","readDouble_f64_rev","writeDouble_ieee754","off0","off1","readDouble_ieee754","lo","hi","require_inquire","e","require_utf8","utf8","len","c1","c2","require_pool","pool","alloc","slice","size","SIZE","MAX","slab","require_longbits","LongBits","util","zero","zeroHash","value","unsigned","charCodeAt","hash","mask","part0","part1","part2","require_minimal","obj","prop","Buffer","sizeOrArray","bits","merge","dst","src","ifNotSet","keys","str","newError","name","CustomError","message","properties","fieldNames","fieldMap","encoding","require_writer","Writer","BufferWriter","Op","noop","State","writer","create","writeByte","writeVarint32","VarintOp","writeVarint64","writeFixed32","writeBytes","head","tail","BufferWriter_","require_writer_buffer","writeStringBuffer","require_reader","Reader","BufferReader","indexOutOfRange","reader","writeLength","create_array","readLongVarint","readFixed32_end","readFixed64","length","nativeBuffer","bytes","wireType","BufferReader_","require_reader_buffer","require_service","Service","rpcImpl","requestDelimited","responseDelimited","rpcCall","method","requestCtor","responseCtor","request","callback","self","response","endedByRPC","require_rpc","rpc","require_roots","require_index_minimal","protobuf","configure","require_compiled","$protobuf","$Reader","$Writer","$util","$root","EddsaAddRequest","tag","object","options","typeUrlPrefix","EddsaAddResponse","GenericMessage"],"mappings":"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","sourcesContent":["\"use strict\";\r\nmodule.exports = asPromise;\r\n\r\n/**\r\n * Callback as used by {@link util.asPromise}.\r\n * @typedef asPromiseCallback\r\n * @type {function}\r\n * @param {Error|null} error Error, if any\r\n * @param {...*} params Additional arguments\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Returns a promise from a node-style callback function.\r\n * @memberof util\r\n * @param {asPromiseCallback} fn Function to call\r\n * @param {*} ctx Function context\r\n * @param {...*} params Function arguments\r\n * @returns {Promise<*>} Promisified function\r\n */\r\nfunction asPromise(fn, ctx/*, varargs */) {\r\n    var params  = new Array(arguments.length - 1),\r\n        offset  = 0,\r\n        index   = 2,\r\n        pending = true;\r\n    while (index < arguments.length)\r\n        params[offset++] = arguments[index++];\r\n    return new Promise(function executor(resolve, reject) {\r\n        params[offset] = function callback(err/*, varargs */) {\r\n            if (pending) {\r\n                pending = false;\r\n                if (err)\r\n                    reject(err);\r\n                else {\r\n                    var params = new Array(arguments.length - 1),\r\n                        offset = 0;\r\n                    while (offset < params.length)\r\n                        params[offset++] = arguments[offset];\r\n                    resolve.apply(null, params);\r\n                }\r\n            }\r\n        };\r\n        try {\r\n            fn.apply(ctx || null, params);\r\n        } catch (err) {\r\n            if (pending) {\r\n                pending = false;\r\n                reject(err);\r\n            }\r\n        }\r\n    });\r\n}\r\n","\"use strict\";\r\n\r\n/**\r\n * A minimal base64 implementation for number arrays.\r\n * @memberof util\r\n * @namespace\r\n */\r\nvar base64 = exports;\r\n\r\n/**\r\n * Calculates the byte length of a base64 encoded string.\r\n * @param {string} string Base64 encoded string\r\n * @returns {number} Byte length\r\n */\r\nbase64.length = function length(string) {\r\n    var p = string.length;\r\n    if (!p)\r\n        return 0;\r\n    var n = 0;\r\n    while (--p % 4 > 1 && string.charAt(p) === \"=\")\r\n        ++n;\r\n    return Math.ceil(string.length * 3) / 4 - n;\r\n};\r\n\r\n// Base64 encoding table\r\nvar b64 = new Array(64);\r\n\r\n// Base64 decoding table\r\nvar s64 = new Array(123);\r\n\r\n// 65..90, 97..122, 48..57, 43, 47\r\nfor (var i = 0; i < 64;)\r\n    s64[b64[i] = i < 26 ? i + 65 : i < 52 ? i + 71 : i < 62 ? i - 4 : i - 59 | 43] = i++;\r\n\r\n/**\r\n * Encodes a buffer to a base64 encoded string.\r\n * @param {Uint8Array} buffer Source buffer\r\n * @param {number} start Source start\r\n * @param {number} end Source end\r\n * @returns {string} Base64 encoded string\r\n */\r\nbase64.encode = function encode(buffer, start, end) {\r\n    var parts = null,\r\n        chunk = [];\r\n    var i = 0, // output index\r\n        j = 0, // goto index\r\n        t;     // temporary\r\n    while (start < end) {\r\n        var b = buffer[start++];\r\n        switch (j) {\r\n            case 0:\r\n                chunk[i++] = b64[b >> 2];\r\n                t = (b & 3) << 4;\r\n                j = 1;\r\n                break;\r\n            case 1:\r\n                chunk[i++] = b64[t | b >> 4];\r\n                t = (b & 15) << 2;\r\n                j = 2;\r\n                break;\r\n            case 2:\r\n                chunk[i++] = b64[t | b >> 6];\r\n                chunk[i++] = b64[b & 63];\r\n                j = 0;\r\n                break;\r\n        }\r\n        if (i > 8191) {\r\n            (parts || (parts = [])).push(String.fromCharCode.apply(String, chunk));\r\n            i = 0;\r\n        }\r\n    }\r\n    if (j) {\r\n        chunk[i++] = b64[t];\r\n        chunk[i++] = 61;\r\n        if (j === 1)\r\n            chunk[i++] = 61;\r\n    }\r\n    if (parts) {\r\n        if (i)\r\n            parts.push(String.fromCharCode.apply(String, chunk.slice(0, i)));\r\n        return parts.join(\"\");\r\n    }\r\n    return String.fromCharCode.apply(String, chunk.slice(0, i));\r\n};\r\n\r\nvar invalidEncoding = \"invalid encoding\";\r\n\r\n/**\r\n * Decodes a base64 encoded string to a buffer.\r\n * @param {string} string Source string\r\n * @param {Uint8Array} buffer Destination buffer\r\n * @param {number} offset Destination offset\r\n * @returns {number} Number of bytes written\r\n * @throws {Error} If encoding is invalid\r\n */\r\nbase64.decode = function decode(string, buffer, offset) {\r\n    var start = offset;\r\n    var j = 0, // goto index\r\n        t;     // temporary\r\n    for (var i = 0; i < string.length;) {\r\n        var c = string.charCodeAt(i++);\r\n        if (c === 61 && j > 1)\r\n            break;\r\n        if ((c = s64[c]) === undefined)\r\n            throw Error(invalidEncoding);\r\n        switch (j) {\r\n            case 0:\r\n                t = c;\r\n                j = 1;\r\n                break;\r\n            case 1:\r\n                buffer[offset++] = t << 2 | (c & 48) >> 4;\r\n                t = c;\r\n                j = 2;\r\n                break;\r\n            case 2:\r\n                buffer[offset++] = (t & 15) << 4 | (c & 60) >> 2;\r\n                t = c;\r\n                j = 3;\r\n                break;\r\n            case 3:\r\n                buffer[offset++] = (t & 3) << 6 | c;\r\n                j = 0;\r\n                break;\r\n        }\r\n    }\r\n    if (j === 1)\r\n        throw Error(invalidEncoding);\r\n    return offset - start;\r\n};\r\n\r\n/**\r\n * Tests if the specified string appears to be base64 encoded.\r\n * @param {string} string String to test\r\n * @returns {boolean} `true` if probably base64 encoded, otherwise false\r\n */\r\nbase64.test = function test(string) {\r\n    return /^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$/.test(string);\r\n};\r\n","\"use strict\";\r\nmodule.exports = EventEmitter;\r\n\r\n/**\r\n * Constructs a new event emitter instance.\r\n * @classdesc A minimal event emitter.\r\n * @memberof util\r\n * @constructor\r\n */\r\nfunction EventEmitter() {\r\n\r\n    /**\r\n     * Registered listeners.\r\n     * @type {Object.<string,*>}\r\n     * @private\r\n     */\r\n    this._listeners = {};\r\n}\r\n\r\n/**\r\n * Registers an event listener.\r\n * @param {string} evt Event name\r\n * @param {function} fn Listener\r\n * @param {*} [ctx] Listener context\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.on = function on(evt, fn, ctx) {\r\n    (this._listeners[evt] || (this._listeners[evt] = [])).push({\r\n        fn  : fn,\r\n        ctx : ctx || this\r\n    });\r\n    return this;\r\n};\r\n\r\n/**\r\n * Removes an event listener or any matching listeners if arguments are omitted.\r\n * @param {string} [evt] Event name. Removes all listeners if omitted.\r\n * @param {function} [fn] Listener to remove. Removes all listeners of `evt` if omitted.\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.off = function off(evt, fn) {\r\n    if (evt === undefined)\r\n        this._listeners = {};\r\n    else {\r\n        if (fn === undefined)\r\n            this._listeners[evt] = [];\r\n        else {\r\n            var listeners = this._listeners[evt];\r\n            for (var i = 0; i < listeners.length;)\r\n                if (listeners[i].fn === fn)\r\n                    listeners.splice(i, 1);\r\n                else\r\n                    ++i;\r\n        }\r\n    }\r\n    return this;\r\n};\r\n\r\n/**\r\n * Emits an event by calling its listeners with the specified arguments.\r\n * @param {string} evt Event name\r\n * @param {...*} args Arguments\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.emit = function emit(evt) {\r\n    var listeners = this._listeners[evt];\r\n    if (listeners) {\r\n        var args = [],\r\n            i = 1;\r\n        for (; i < arguments.length;)\r\n            args.push(arguments[i++]);\r\n        for (i = 0; i < listeners.length;)\r\n            listeners[i].fn.apply(listeners[i++].ctx, args);\r\n    }\r\n    return this;\r\n};\r\n","\"use strict\";\r\n\r\nmodule.exports = factory(factory);\r\n\r\n/**\r\n * Reads / writes floats / doubles from / to buffers.\r\n * @name util.float\r\n * @namespace\r\n */\r\n\r\n/**\r\n * Writes a 32 bit float to a buffer using little endian byte order.\r\n * @name util.float.writeFloatLE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Writes a 32 bit float to a buffer using big endian byte order.\r\n * @name util.float.writeFloatBE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Reads a 32 bit float from a buffer using little endian byte order.\r\n * @name util.float.readFloatLE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Reads a 32 bit float from a buffer using big endian byte order.\r\n * @name util.float.readFloatBE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Writes a 64 bit double to a buffer using little endian byte order.\r\n * @name util.float.writeDoubleLE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Writes a 64 bit double to a buffer using big endian byte order.\r\n * @name util.float.writeDoubleBE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Reads a 64 bit double from a buffer using little endian byte order.\r\n * @name util.float.readDoubleLE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Reads a 64 bit double from a buffer using big endian byte order.\r\n * @name util.float.readDoubleBE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n// Factory function for the purpose of node-based testing in modified global environments\r\nfunction factory(exports) {\r\n\r\n    // float: typed array\r\n    if (typeof Float32Array !== \"undefined\") (function() {\r\n\r\n        var f32 = new Float32Array([ -0 ]),\r\n            f8b = new Uint8Array(f32.buffer),\r\n            le  = f8b[3] === 128;\r\n\r\n        function writeFloat_f32_cpy(val, buf, pos) {\r\n            f32[0] = val;\r\n            buf[pos    ] = f8b[0];\r\n            buf[pos + 1] = f8b[1];\r\n            buf[pos + 2] = f8b[2];\r\n            buf[pos + 3] = f8b[3];\r\n        }\r\n\r\n        function writeFloat_f32_rev(val, buf, pos) {\r\n            f32[0] = val;\r\n            buf[pos    ] = f8b[3];\r\n            buf[pos + 1] = f8b[2];\r\n            buf[pos + 2] = f8b[1];\r\n            buf[pos + 3] = f8b[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.writeFloatLE = le ? writeFloat_f32_cpy : writeFloat_f32_rev;\r\n        /* istanbul ignore next */\r\n        exports.writeFloatBE = le ? writeFloat_f32_rev : writeFloat_f32_cpy;\r\n\r\n        function readFloat_f32_cpy(buf, pos) {\r\n            f8b[0] = buf[pos    ];\r\n            f8b[1] = buf[pos + 1];\r\n            f8b[2] = buf[pos + 2];\r\n            f8b[3] = buf[pos + 3];\r\n            return f32[0];\r\n        }\r\n\r\n        function readFloat_f32_rev(buf, pos) {\r\n            f8b[3] = buf[pos    ];\r\n            f8b[2] = buf[pos + 1];\r\n            f8b[1] = buf[pos + 2];\r\n            f8b[0] = buf[pos + 3];\r\n            return f32[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.readFloatLE = le ? readFloat_f32_cpy : readFloat_f32_rev;\r\n        /* istanbul ignore next */\r\n        exports.readFloatBE = le ? readFloat_f32_rev : readFloat_f32_cpy;\r\n\r\n    // float: ieee754\r\n    })(); else (function() {\r\n\r\n        function writeFloat_ieee754(writeUint, val, buf, pos) {\r\n            var sign = val < 0 ? 1 : 0;\r\n            if (sign)\r\n                val = -val;\r\n            if (val === 0)\r\n                writeUint(1 / val > 0 ? /* positive */ 0 : /* negative 0 */ 2147483648, buf, pos);\r\n            else if (isNaN(val))\r\n                writeUint(2143289344, buf, pos);\r\n            else if (val > 3.4028234663852886e+38) // +-Infinity\r\n                writeUint((sign << 31 | 2139095040) >>> 0, buf, pos);\r\n            else if (val < 1.1754943508222875e-38) // denormal\r\n                writeUint((sign << 31 | Math.round(val / 1.401298464324817e-45)) >>> 0, buf, pos);\r\n            else {\r\n                var exponent = Math.floor(Math.log(val) / Math.LN2),\r\n                    mantissa = Math.round(val * Math.pow(2, -exponent) * 8388608) & 8388607;\r\n                writeUint((sign << 31 | exponent + 127 << 23 | mantissa) >>> 0, buf, pos);\r\n            }\r\n        }\r\n\r\n        exports.writeFloatLE = writeFloat_ieee754.bind(null, writeUintLE);\r\n        exports.writeFloatBE = writeFloat_ieee754.bind(null, writeUintBE);\r\n\r\n        function readFloat_ieee754(readUint, buf, pos) {\r\n            var uint = readUint(buf, pos),\r\n                sign = (uint >> 31) * 2 + 1,\r\n                exponent = uint >>> 23 & 255,\r\n                mantissa = uint & 8388607;\r\n            return exponent === 255\r\n                ? mantissa\r\n                ? NaN\r\n                : sign * Infinity\r\n                : exponent === 0 // denormal\r\n                ? sign * 1.401298464324817e-45 * mantissa\r\n                : sign * Math.pow(2, exponent - 150) * (mantissa + 8388608);\r\n        }\r\n\r\n        exports.readFloatLE = readFloat_ieee754.bind(null, readUintLE);\r\n        exports.readFloatBE = readFloat_ieee754.bind(null, readUintBE);\r\n\r\n    })();\r\n\r\n    // double: typed array\r\n    if (typeof Float64Array !== \"undefined\") (function() {\r\n\r\n        var f64 = new Float64Array([-0]),\r\n            f8b = new Uint8Array(f64.buffer),\r\n            le  = f8b[7] === 128;\r\n\r\n        function writeDouble_f64_cpy(val, buf, pos) {\r\n            f64[0] = val;\r\n            buf[pos    ] = f8b[0];\r\n            buf[pos + 1] = f8b[1];\r\n            buf[pos + 2] = f8b[2];\r\n            buf[pos + 3] = f8b[3];\r\n            buf[pos + 4] = f8b[4];\r\n            buf[pos + 5] = f8b[5];\r\n            buf[pos + 6] = f8b[6];\r\n            buf[pos + 7] = f8b[7];\r\n        }\r\n\r\n        function writeDouble_f64_rev(val, buf, pos) {\r\n            f64[0] = val;\r\n            buf[pos    ] = f8b[7];\r\n            buf[pos + 1] = f8b[6];\r\n            buf[pos + 2] = f8b[5];\r\n            buf[pos + 3] = f8b[4];\r\n            buf[pos + 4] = f8b[3];\r\n            buf[pos + 5] = f8b[2];\r\n            buf[pos + 6] = f8b[1];\r\n            buf[pos + 7] = f8b[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.writeDoubleLE = le ? writeDouble_f64_cpy : writeDouble_f64_rev;\r\n        /* istanbul ignore next */\r\n        exports.writeDoubleBE = le ? writeDouble_f64_rev : writeDouble_f64_cpy;\r\n\r\n        function readDouble_f64_cpy(buf, pos) {\r\n            f8b[0] = buf[pos    ];\r\n            f8b[1] = buf[pos + 1];\r\n            f8b[2] = buf[pos + 2];\r\n            f8b[3] = buf[pos + 3];\r\n            f8b[4] = buf[pos + 4];\r\n            f8b[5] = buf[pos + 5];\r\n            f8b[6] = buf[pos + 6];\r\n            f8b[7] = buf[pos + 7];\r\n            return f64[0];\r\n        }\r\n\r\n        function readDouble_f64_rev(buf, pos) {\r\n            f8b[7] = buf[pos    ];\r\n            f8b[6] = buf[pos + 1];\r\n            f8b[5] = buf[pos + 2];\r\n            f8b[4] = buf[pos + 3];\r\n            f8b[3] = buf[pos + 4];\r\n            f8b[2] = buf[pos + 5];\r\n            f8b[1] = buf[pos + 6];\r\n            f8b[0] = buf[pos + 7];\r\n            return f64[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.readDoubleLE = le ? readDouble_f64_cpy : readDouble_f64_rev;\r\n        /* istanbul ignore next */\r\n        exports.readDoubleBE = le ? readDouble_f64_rev : readDouble_f64_cpy;\r\n\r\n    // double: ieee754\r\n    })(); else (function() {\r\n\r\n        function writeDouble_ieee754(writeUint, off0, off1, val, buf, pos) {\r\n            var sign = val < 0 ? 1 : 0;\r\n            if (sign)\r\n                val = -val;\r\n            if (val === 0) {\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint(1 / val > 0 ? /* positive */ 0 : /* negative 0 */ 2147483648, buf, pos + off1);\r\n            } else if (isNaN(val)) {\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint(2146959360, buf, pos + off1);\r\n            } else if (val > 1.7976931348623157e+308) { // +-Infinity\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint((sign << 31 | 2146435072) >>> 0, buf, pos + off1);\r\n            } else {\r\n                var mantissa;\r\n                if (val < 2.2250738585072014e-308) { // denormal\r\n                    mantissa = val / 5e-324;\r\n                    writeUint(mantissa >>> 0, buf, pos + off0);\r\n                    writeUint((sign << 31 | mantissa / 4294967296) >>> 0, buf, pos + off1);\r\n                } else {\r\n                    var exponent = Math.floor(Math.log(val) / Math.LN2);\r\n                    if (exponent === 1024)\r\n                        exponent = 1023;\r\n                    mantissa = val * Math.pow(2, -exponent);\r\n                    writeUint(mantissa * 4503599627370496 >>> 0, buf, pos + off0);\r\n                    writeUint((sign << 31 | exponent + 1023 << 20 | mantissa * 1048576 & 1048575) >>> 0, buf, pos + off1);\r\n                }\r\n            }\r\n        }\r\n\r\n        exports.writeDoubleLE = writeDouble_ieee754.bind(null, writeUintLE, 0, 4);\r\n        exports.writeDoubleBE = writeDouble_ieee754.bind(null, writeUintBE, 4, 0);\r\n\r\n        function readDouble_ieee754(readUint, off0, off1, buf, pos) {\r\n            var lo = readUint(buf, pos + off0),\r\n                hi = readUint(buf, pos + off1);\r\n            var sign = (hi >> 31) * 2 + 1,\r\n                exponent = hi >>> 20 & 2047,\r\n                mantissa = 4294967296 * (hi & 1048575) + lo;\r\n            return exponent === 2047\r\n                ? mantissa\r\n                ? NaN\r\n                : sign * Infinity\r\n                : exponent === 0 // denormal\r\n                ? sign * 5e-324 * mantissa\r\n                : sign * Math.pow(2, exponent - 1075) * (mantissa + 4503599627370496);\r\n        }\r\n\r\n        exports.readDoubleLE = readDouble_ieee754.bind(null, readUintLE, 0, 4);\r\n        exports.readDoubleBE = readDouble_ieee754.bind(null, readUintBE, 4, 0);\r\n\r\n    })();\r\n\r\n    return exports;\r\n}\r\n\r\n// uint helpers\r\n\r\nfunction writeUintLE(val, buf, pos) {\r\n    buf[pos    ] =  val        & 255;\r\n    buf[pos + 1] =  val >>> 8  & 255;\r\n    buf[pos + 2] =  val >>> 16 & 255;\r\n    buf[pos + 3] =  val >>> 24;\r\n}\r\n\r\nfunction writeUintBE(val, buf, pos) {\r\n    buf[pos    ] =  val >>> 24;\r\n    buf[pos + 1] =  val >>> 16 & 255;\r\n    buf[pos + 2] =  val >>> 8  & 255;\r\n    buf[pos + 3] =  val        & 255;\r\n}\r\n\r\nfunction readUintLE(buf, pos) {\r\n    return (buf[pos    ]\r\n          | buf[pos + 1] << 8\r\n          | buf[pos + 2] << 16\r\n          | buf[pos + 3] << 24) >>> 0;\r\n}\r\n\r\nfunction readUintBE(buf, pos) {\r\n    return (buf[pos    ] << 24\r\n          | buf[pos + 1] << 16\r\n          | buf[pos + 2] << 8\r\n          | buf[pos + 3]) >>> 0;\r\n}\r\n","\"use strict\";\r\nmodule.exports = inquire;\r\n\r\n/**\r\n * Requires a module only if available.\r\n * @memberof util\r\n * @param {string} moduleName Module to require\r\n * @returns {?Object} Required module if available and not empty, otherwise `null`\r\n */\r\nfunction inquire(moduleName) {\r\n    try {\r\n        var mod = eval(\"quire\".replace(/^/,\"re\"))(moduleName); // eslint-disable-line no-eval\r\n        if (mod && (mod.length || Object.keys(mod).length))\r\n            return mod;\r\n    } catch (e) {} // eslint-disable-line no-empty\r\n    return null;\r\n}\r\n","\"use strict\";\r\n\r\n/**\r\n * A minimal UTF8 implementation for number arrays.\r\n * @memberof util\r\n * @namespace\r\n */\r\nvar utf8 = exports;\r\n\r\n/**\r\n * Calculates the UTF8 byte length of a string.\r\n * @param {string} string String\r\n * @returns {number} Byte length\r\n */\r\nutf8.length = function utf8_length(string) {\r\n    var len = 0,\r\n        c = 0;\r\n    for (var i = 0; i < string.length; ++i) {\r\n        c = string.charCodeAt(i);\r\n        if (c < 128)\r\n            len += 1;\r\n        else if (c < 2048)\r\n            len += 2;\r\n        else if ((c & 0xFC00) === 0xD800 && (string.charCodeAt(i + 1) & 0xFC00) === 0xDC00) {\r\n            ++i;\r\n            len += 4;\r\n        } else\r\n            len += 3;\r\n    }\r\n    return len;\r\n};\r\n\r\n/**\r\n * Reads UTF8 bytes as a string.\r\n * @param {Uint8Array} buffer Source buffer\r\n * @param {number} start Source start\r\n * @param {number} end Source end\r\n * @returns {string} String read\r\n */\r\nutf8.read = function utf8_read(buffer, start, end) {\r\n    var len = end - start;\r\n    if (len < 1)\r\n        return \"\";\r\n    var parts = null,\r\n        chunk = [],\r\n        i = 0, // char offset\r\n        t;     // temporary\r\n    while (start < end) {\r\n        t = buffer[start++];\r\n        if (t < 128)\r\n            chunk[i++] = t;\r\n        else if (t > 191 && t < 224)\r\n            chunk[i++] = (t & 31) << 6 | buffer[start++] & 63;\r\n        else if (t > 239 && t < 365) {\r\n            t = ((t & 7) << 18 | (buffer[start++] & 63) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63) - 0x10000;\r\n            chunk[i++] = 0xD800 + (t >> 10);\r\n            chunk[i++] = 0xDC00 + (t & 1023);\r\n        } else\r\n            chunk[i++] = (t & 15) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63;\r\n        if (i > 8191) {\r\n            (parts || (parts = [])).push(String.fromCharCode.apply(String, chunk));\r\n            i = 0;\r\n        }\r\n    }\r\n    if (parts) {\r\n        if (i)\r\n            parts.push(String.fromCharCode.apply(String, chunk.slice(0, i)));\r\n        return parts.join(\"\");\r\n    }\r\n    return String.fromCharCode.apply(String, chunk.slice(0, i));\r\n};\r\n\r\n/**\r\n * Writes a string as UTF8 bytes.\r\n * @param {string} string Source string\r\n * @param {Uint8Array} buffer Destination buffer\r\n * @param {number} offset Destination offset\r\n * @returns {number} Bytes written\r\n */\r\nutf8.write = function utf8_write(string, buffer, offset) {\r\n    var start = offset,\r\n        c1, // character 1\r\n        c2; // character 2\r\n    for (var i = 0; i < string.length; ++i) {\r\n        c1 = string.charCodeAt(i);\r\n        if (c1 < 128) {\r\n            buffer[offset++] = c1;\r\n        } else if (c1 < 2048) {\r\n            buffer[offset++] = c1 >> 6       | 192;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        } else if ((c1 & 0xFC00) === 0xD800 && ((c2 = string.charCodeAt(i + 1)) & 0xFC00) === 0xDC00) {\r\n            c1 = 0x10000 + ((c1 & 0x03FF) << 10) + (c2 & 0x03FF);\r\n            ++i;\r\n            buffer[offset++] = c1 >> 18      | 240;\r\n            buffer[offset++] = c1 >> 12 & 63 | 128;\r\n            buffer[offset++] = c1 >> 6  & 63 | 128;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        } else {\r\n            buffer[offset++] = c1 >> 12      | 224;\r\n            buffer[offset++] = c1 >> 6  & 63 | 128;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        }\r\n    }\r\n    return offset - start;\r\n};\r\n","\"use strict\";\r\nmodule.exports = pool;\r\n\r\n/**\r\n * An allocator as used by {@link util.pool}.\r\n * @typedef PoolAllocator\r\n * @type {function}\r\n * @param {number} size Buffer size\r\n * @returns {Uint8Array} Buffer\r\n */\r\n\r\n/**\r\n * A slicer as used by {@link util.pool}.\r\n * @typedef PoolSlicer\r\n * @type {function}\r\n * @param {number} start Start offset\r\n * @param {number} end End offset\r\n * @returns {Uint8Array} Buffer slice\r\n * @this {Uint8Array}\r\n */\r\n\r\n/**\r\n * A general purpose buffer pool.\r\n * @memberof util\r\n * @function\r\n * @param {PoolAllocator} alloc Allocator\r\n * @param {PoolSlicer} slice Slicer\r\n * @param {number} [size=8192] Slab size\r\n * @returns {PoolAllocator} Pooled allocator\r\n */\r\nfunction pool(alloc, slice, size) {\r\n    var SIZE   = size || 8192;\r\n    var MAX    = SIZE >>> 1;\r\n    var slab   = null;\r\n    var offset = SIZE;\r\n    return function pool_alloc(size) {\r\n        if (size < 1 || size > MAX)\r\n            return alloc(size);\r\n        if (offset + size > SIZE) {\r\n            slab = alloc(SIZE);\r\n            offset = 0;\r\n        }\r\n        var buf = slice.call(slab, offset, offset += size);\r\n        if (offset & 7) // align to 32 bit\r\n            offset = (offset | 7) + 1;\r\n        return buf;\r\n    };\r\n}\r\n","\"use strict\";\nmodule.exports = LongBits;\n\nvar util = require(\"../util/minimal\");\n\n/**\n * Constructs new long bits.\n * @classdesc Helper class for working with the low and high bits of a 64 bit value.\n * @memberof util\n * @constructor\n * @param {number} lo Low 32 bits, unsigned\n * @param {number} hi High 32 bits, unsigned\n */\nfunction LongBits(lo, hi) {\n\n    // note that the casts below are theoretically unnecessary as of today, but older statically\n    // generated converter code might still call the ctor with signed 32bits. kept for compat.\n\n    /**\n     * Low bits.\n     * @type {number}\n     */\n    this.lo = lo >>> 0;\n\n    /**\n     * High bits.\n     * @type {number}\n     */\n    this.hi = hi >>> 0;\n}\n\n/**\n * Zero bits.\n * @memberof util.LongBits\n * @type {util.LongBits}\n */\nvar zero = LongBits.zero = new LongBits(0, 0);\n\nzero.toNumber = function() { return 0; };\nzero.zzEncode = zero.zzDecode = function() { return this; };\nzero.length = function() { return 1; };\n\n/**\n * Zero hash.\n * @memberof util.LongBits\n * @type {string}\n */\nvar zeroHash = LongBits.zeroHash = \"\\0\\0\\0\\0\\0\\0\\0\\0\";\n\n/**\n * Constructs new long bits from the specified number.\n * @param {number} value Value\n * @returns {util.LongBits} Instance\n */\nLongBits.fromNumber = function fromNumber(value) {\n    if (value === 0)\n        return zero;\n    var sign = value < 0;\n    if (sign)\n        value = -value;\n    var lo = value >>> 0,\n        hi = (value - lo) / 4294967296 >>> 0;\n    if (sign) {\n        hi = ~hi >>> 0;\n        lo = ~lo >>> 0;\n        if (++lo > 4294967295) {\n            lo = 0;\n            if (++hi > 4294967295)\n                hi = 0;\n        }\n    }\n    return new LongBits(lo, hi);\n};\n\n/**\n * Constructs new long bits from a number, long or string.\n * @param {Long|number|string} value Value\n * @returns {util.LongBits} Instance\n */\nLongBits.from = function from(value) {\n    if (typeof value === \"number\")\n        return LongBits.fromNumber(value);\n    if (util.isString(value)) {\n        /* istanbul ignore else */\n        if (util.Long)\n            value = util.Long.fromString(value);\n        else\n            return LongBits.fromNumber(parseInt(value, 10));\n    }\n    return value.low || value.high ? new LongBits(value.low >>> 0, value.high >>> 0) : zero;\n};\n\n/**\n * Converts this long bits to a possibly unsafe JavaScript number.\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {number} Possibly unsafe number\n */\nLongBits.prototype.toNumber = function toNumber(unsigned) {\n    if (!unsigned && this.hi >>> 31) {\n        var lo = ~this.lo + 1 >>> 0,\n            hi = ~this.hi     >>> 0;\n        if (!lo)\n            hi = hi + 1 >>> 0;\n        return -(lo + hi * 4294967296);\n    }\n    return this.lo + this.hi * 4294967296;\n};\n\n/**\n * Converts this long bits to a long.\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {Long} Long\n */\nLongBits.prototype.toLong = function toLong(unsigned) {\n    return util.Long\n        ? new util.Long(this.lo | 0, this.hi | 0, Boolean(unsigned))\n        /* istanbul ignore next */\n        : { low: this.lo | 0, high: this.hi | 0, unsigned: Boolean(unsigned) };\n};\n\nvar charCodeAt = String.prototype.charCodeAt;\n\n/**\n * Constructs new long bits from the specified 8 characters long hash.\n * @param {string} hash Hash\n * @returns {util.LongBits} Bits\n */\nLongBits.fromHash = function fromHash(hash) {\n    if (hash === zeroHash)\n        return zero;\n    return new LongBits(\n        ( charCodeAt.call(hash, 0)\n        | charCodeAt.call(hash, 1) << 8\n        | charCodeAt.call(hash, 2) << 16\n        | charCodeAt.call(hash, 3) << 24) >>> 0\n    ,\n        ( charCodeAt.call(hash, 4)\n        | charCodeAt.call(hash, 5) << 8\n        | charCodeAt.call(hash, 6) << 16\n        | charCodeAt.call(hash, 7) << 24) >>> 0\n    );\n};\n\n/**\n * Converts this long bits to a 8 characters long hash.\n * @returns {string} Hash\n */\nLongBits.prototype.toHash = function toHash() {\n    return String.fromCharCode(\n        this.lo        & 255,\n        this.lo >>> 8  & 255,\n        this.lo >>> 16 & 255,\n        this.lo >>> 24      ,\n        this.hi        & 255,\n        this.hi >>> 8  & 255,\n        this.hi >>> 16 & 255,\n        this.hi >>> 24\n    );\n};\n\n/**\n * Zig-zag encodes this long bits.\n * @returns {util.LongBits} `this`\n */\nLongBits.prototype.zzEncode = function zzEncode() {\n    var mask =   this.hi >> 31;\n    this.hi  = ((this.hi << 1 | this.lo >>> 31) ^ mask) >>> 0;\n    this.lo  = ( this.lo << 1                   ^ mask) >>> 0;\n    return this;\n};\n\n/**\n * Zig-zag decodes this long bits.\n * @returns {util.LongBits} `this`\n */\nLongBits.prototype.zzDecode = function zzDecode() {\n    var mask = -(this.lo & 1);\n    this.lo  = ((this.lo >>> 1 | this.hi << 31) ^ mask) >>> 0;\n    this.hi  = ( this.hi >>> 1                  ^ mask) >>> 0;\n    return this;\n};\n\n/**\n * Calculates the length of this longbits when encoded as a varint.\n * @returns {number} Length\n */\nLongBits.prototype.length = function length() {\n    var part0 =  this.lo,\n        part1 = (this.lo >>> 28 | this.hi << 4) >>> 0,\n        part2 =  this.hi >>> 24;\n    return part2 === 0\n         ? part1 === 0\n           ? part0 < 16384\n             ? part0 < 128 ? 1 : 2\n             : part0 < 2097152 ? 3 : 4\n           : part1 < 16384\n             ? part1 < 128 ? 5 : 6\n             : part1 < 2097152 ? 7 : 8\n         : part2 < 128 ? 9 : 10;\n};\n","\"use strict\";\nvar util = exports;\n\n// used to return a Promise where callback is omitted\nutil.asPromise = require(\"@protobufjs/aspromise\");\n\n// converts to / from base64 encoded strings\nutil.base64 = require(\"@protobufjs/base64\");\n\n// base class of rpc.Service\nutil.EventEmitter = require(\"@protobufjs/eventemitter\");\n\n// float handling accross browsers\nutil.float = require(\"@protobufjs/float\");\n\n// requires modules optionally and hides the call from bundlers\nutil.inquire = require(\"@protobufjs/inquire\");\n\n// converts to / from utf8 encoded strings\nutil.utf8 = require(\"@protobufjs/utf8\");\n\n// provides a node-like buffer pool in the browser\nutil.pool = require(\"@protobufjs/pool\");\n\n// utility to work with the low and high bits of a 64 bit value\nutil.LongBits = require(\"./longbits\");\n\n/**\n * Whether running within node or not.\n * @memberof util\n * @type {boolean}\n */\nutil.isNode = Boolean(typeof global !== \"undefined\"\n                   && global\n                   && global.process\n                   && global.process.versions\n                   && global.process.versions.node);\n\n/**\n * Global object reference.\n * @memberof util\n * @type {Object}\n */\nutil.global = util.isNode && global\n           || typeof window !== \"undefined\" && window\n           || typeof self   !== \"undefined\" && self\n           || this; // eslint-disable-line no-invalid-this\n\n/**\n * An immuable empty array.\n * @memberof util\n * @type {Array.<*>}\n * @const\n */\nutil.emptyArray = Object.freeze ? Object.freeze([]) : /* istanbul ignore next */ []; // used on prototypes\n\n/**\n * An immutable empty object.\n * @type {Object}\n * @const\n */\nutil.emptyObject = Object.freeze ? Object.freeze({}) : /* istanbul ignore next */ {}; // used on prototypes\n\n/**\n * Tests if the specified value is an integer.\n * @function\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is an integer\n */\nutil.isInteger = Number.isInteger || /* istanbul ignore next */ function isInteger(value) {\n    return typeof value === \"number\" && isFinite(value) && Math.floor(value) === value;\n};\n\n/**\n * Tests if the specified value is a string.\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is a string\n */\nutil.isString = function isString(value) {\n    return typeof value === \"string\" || value instanceof String;\n};\n\n/**\n * Tests if the specified value is a non-null object.\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is a non-null object\n */\nutil.isObject = function isObject(value) {\n    return value && typeof value === \"object\";\n};\n\n/**\n * Checks if a property on a message is considered to be present.\n * This is an alias of {@link util.isSet}.\n * @function\n * @param {Object} obj Plain object or message instance\n * @param {string} prop Property name\n * @returns {boolean} `true` if considered to be present, otherwise `false`\n */\nutil.isset =\n\n/**\n * Checks if a property on a message is considered to be present.\n * @param {Object} obj Plain object or message instance\n * @param {string} prop Property name\n * @returns {boolean} `true` if considered to be present, otherwise `false`\n */\nutil.isSet = function isSet(obj, prop) {\n    var value = obj[prop];\n    if (value != null && obj.hasOwnProperty(prop)) // eslint-disable-line eqeqeq, no-prototype-builtins\n        return typeof value !== \"object\" || (Array.isArray(value) ? value.length : Object.keys(value).length) > 0;\n    return false;\n};\n\n/**\n * Any compatible Buffer instance.\n * This is a minimal stand-alone definition of a Buffer instance. The actual type is that exported by node's typings.\n * @interface Buffer\n * @extends Uint8Array\n */\n\n/**\n * Node's Buffer class if available.\n * @type {Constructor<Buffer>}\n */\nutil.Buffer = (function() {\n    try {\n        var Buffer = util.inquire(\"buffer\").Buffer;\n        // refuse to use non-node buffers if not explicitly assigned (perf reasons):\n        return Buffer.prototype.utf8Write ? Buffer : /* istanbul ignore next */ null;\n    } catch (e) {\n        /* istanbul ignore next */\n        return null;\n    }\n})();\n\n// Internal alias of or polyfull for Buffer.from.\nutil._Buffer_from = null;\n\n// Internal alias of or polyfill for Buffer.allocUnsafe.\nutil._Buffer_allocUnsafe = null;\n\n/**\n * Creates a new buffer of whatever type supported by the environment.\n * @param {number|number[]} [sizeOrArray=0] Buffer size or number array\n * @returns {Uint8Array|Buffer} Buffer\n */\nutil.newBuffer = function newBuffer(sizeOrArray) {\n    /* istanbul ignore next */\n    return typeof sizeOrArray === \"number\"\n        ? util.Buffer\n            ? util._Buffer_allocUnsafe(sizeOrArray)\n            : new util.Array(sizeOrArray)\n        : util.Buffer\n            ? util._Buffer_from(sizeOrArray)\n            : typeof Uint8Array === \"undefined\"\n                ? sizeOrArray\n                : new Uint8Array(sizeOrArray);\n};\n\n/**\n * Array implementation used in the browser. `Uint8Array` if supported, otherwise `Array`.\n * @type {Constructor<Uint8Array>}\n */\nutil.Array = typeof Uint8Array !== \"undefined\" ? Uint8Array /* istanbul ignore next */ : Array;\n\n/**\n * Any compatible Long instance.\n * This is a minimal stand-alone definition of a Long instance. The actual type is that exported by long.js.\n * @interface Long\n * @property {number} low Low bits\n * @property {number} high High bits\n * @property {boolean} unsigned Whether unsigned or not\n */\n\n/**\n * Long.js's Long class if available.\n * @type {Constructor<Long>}\n */\nutil.Long = /* istanbul ignore next */ util.global.dcodeIO && /* istanbul ignore next */ util.global.dcodeIO.Long\n         || /* istanbul ignore next */ util.global.Long\n         || util.inquire(\"long\");\n\n/**\n * Regular expression used to verify 2 bit (`bool`) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key2Re = /^true|false|0|1$/;\n\n/**\n * Regular expression used to verify 32 bit (`int32` etc.) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key32Re = /^-?(?:0|[1-9][0-9]*)$/;\n\n/**\n * Regular expression used to verify 64 bit (`int64` etc.) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key64Re = /^(?:[\\\\x00-\\\\xff]{8}|-?(?:0|[1-9][0-9]*))$/;\n\n/**\n * Converts a number or long to an 8 characters long hash string.\n * @param {Long|number} value Value to convert\n * @returns {string} Hash\n */\nutil.longToHash = function longToHash(value) {\n    return value\n        ? util.LongBits.from(value).toHash()\n        : util.LongBits.zeroHash;\n};\n\n/**\n * Converts an 8 characters long hash string to a long or number.\n * @param {string} hash Hash\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {Long|number} Original value\n */\nutil.longFromHash = function longFromHash(hash, unsigned) {\n    var bits = util.LongBits.fromHash(hash);\n    if (util.Long)\n        return util.Long.fromBits(bits.lo, bits.hi, unsigned);\n    return bits.toNumber(Boolean(unsigned));\n};\n\n/**\n * Merges the properties of the source object into the destination object.\n * @memberof util\n * @param {Object.<string,*>} dst Destination object\n * @param {Object.<string,*>} src Source object\n * @param {boolean} [ifNotSet=false] Merges only if the key is not already set\n * @returns {Object.<string,*>} Destination object\n */\nfunction merge(dst, src, ifNotSet) { // used by converters\n    for (var keys = Object.keys(src), i = 0; i < keys.length; ++i)\n        if (dst[keys[i]] === undefined || !ifNotSet)\n            dst[keys[i]] = src[keys[i]];\n    return dst;\n}\n\nutil.merge = merge;\n\n/**\n * Converts the first character of a string to lower case.\n * @param {string} str String to convert\n * @returns {string} Converted string\n */\nutil.lcFirst = function lcFirst(str) {\n    return str.charAt(0).toLowerCase() + str.substring(1);\n};\n\n/**\n * Creates a custom error constructor.\n * @memberof util\n * @param {string} name Error name\n * @returns {Constructor<Error>} Custom error constructor\n */\nfunction newError(name) {\n\n    function CustomError(message, properties) {\n\n        if (!(this instanceof CustomError))\n            return new CustomError(message, properties);\n\n        // Error.call(this, message);\n        // ^ just returns a new error instance because the ctor can be called as a function\n\n        Object.defineProperty(this, \"message\", { get: function() { return message; } });\n\n        /* istanbul ignore next */\n        if (Error.captureStackTrace) // node\n            Error.captureStackTrace(this, CustomError);\n        else\n            Object.defineProperty(this, \"stack\", { value: new Error().stack || \"\" });\n\n        if (properties)\n            merge(this, properties);\n    }\n\n    CustomError.prototype = Object.create(Error.prototype, {\n        constructor: {\n            value: CustomError,\n            writable: true,\n            enumerable: false,\n            configurable: true,\n        },\n        name: {\n            get: function get() { return name; },\n            set: undefined,\n            enumerable: false,\n            // configurable: false would accurately preserve the behavior of\n            // the original, but I'm guessing that was not intentional.\n            // For an actual error subclass, this property would\n            // be configurable.\n            configurable: true,\n        },\n        toString: {\n            value: function value() { return this.name + \": \" + this.message; },\n            writable: true,\n            enumerable: false,\n            configurable: true,\n        },\n    });\n\n    return CustomError;\n}\n\nutil.newError = newError;\n\n/**\n * Constructs a new protocol error.\n * @classdesc Error subclass indicating a protocol specifc error.\n * @memberof util\n * @extends Error\n * @template T extends Message<T>\n * @constructor\n * @param {string} message Error message\n * @param {Object.<string,*>} [properties] Additional properties\n * @example\n * try {\n *     MyMessage.decode(someBuffer); // throws if required fields are missing\n * } catch (e) {\n *     if (e instanceof ProtocolError && e.instance)\n *         console.log(\"decoded so far: \" + JSON.stringify(e.instance));\n * }\n */\nutil.ProtocolError = newError(\"ProtocolError\");\n\n/**\n * So far decoded message instance.\n * @name util.ProtocolError#instance\n * @type {Message<T>}\n */\n\n/**\n * A OneOf getter as returned by {@link util.oneOfGetter}.\n * @typedef OneOfGetter\n * @type {function}\n * @returns {string|undefined} Set field name, if any\n */\n\n/**\n * Builds a getter for a oneof's present field name.\n * @param {string[]} fieldNames Field names\n * @returns {OneOfGetter} Unbound getter\n */\nutil.oneOfGetter = function getOneOf(fieldNames) {\n    var fieldMap = {};\n    for (var i = 0; i < fieldNames.length; ++i)\n        fieldMap[fieldNames[i]] = 1;\n\n    /**\n     * @returns {string|undefined} Set field name, if any\n     * @this Object\n     * @ignore\n     */\n    return function() { // eslint-disable-line consistent-return\n        for (var keys = Object.keys(this), i = keys.length - 1; i > -1; --i)\n            if (fieldMap[keys[i]] === 1 && this[keys[i]] !== undefined && this[keys[i]] !== null)\n                return keys[i];\n    };\n};\n\n/**\n * A OneOf setter as returned by {@link util.oneOfSetter}.\n * @typedef OneOfSetter\n * @type {function}\n * @param {string|undefined} value Field name\n * @returns {undefined}\n */\n\n/**\n * Builds a setter for a oneof's present field name.\n * @param {string[]} fieldNames Field names\n * @returns {OneOfSetter} Unbound setter\n */\nutil.oneOfSetter = function setOneOf(fieldNames) {\n\n    /**\n     * @param {string} name Field name\n     * @returns {undefined}\n     * @this Object\n     * @ignore\n     */\n    return function(name) {\n        for (var i = 0; i < fieldNames.length; ++i)\n            if (fieldNames[i] !== name)\n                delete this[fieldNames[i]];\n    };\n};\n\n/**\n * Default conversion options used for {@link Message#toJSON} implementations.\n *\n * These options are close to proto3's JSON mapping with the exception that internal types like Any are handled just like messages. More precisely:\n *\n * - Longs become strings\n * - Enums become string keys\n * - Bytes become base64 encoded strings\n * - (Sub-)Messages become plain objects\n * - Maps become plain objects with all string keys\n * - Repeated fields become arrays\n * - NaN and Infinity for float and double fields become strings\n *\n * @type {IConversionOptions}\n * @see https://developers.google.com/protocol-buffers/docs/proto3?hl=en#json\n */\nutil.toJSONOptions = {\n    longs: String,\n    enums: String,\n    bytes: String,\n    json: true\n};\n\n// Sets up buffer utility according to the environment (called in index-minimal)\nutil._configure = function() {\n    var Buffer = util.Buffer;\n    /* istanbul ignore if */\n    if (!Buffer) {\n        util._Buffer_from = util._Buffer_allocUnsafe = null;\n        return;\n    }\n    // because node 4.x buffers are incompatible & immutable\n    // see: https://github.com/dcodeIO/protobuf.js/pull/665\n    util._Buffer_from = Buffer.from !== Uint8Array.from && Buffer.from ||\n        /* istanbul ignore next */\n        function Buffer_from(value, encoding) {\n            return new Buffer(value, encoding);\n        };\n    util._Buffer_allocUnsafe = Buffer.allocUnsafe ||\n        /* istanbul ignore next */\n        function Buffer_allocUnsafe(size) {\n            return new Buffer(size);\n        };\n};\n","\"use strict\";\nmodule.exports = Writer;\n\nvar util      = require(\"./util/minimal\");\n\nvar BufferWriter; // cyclic\n\nvar LongBits  = util.LongBits,\n    base64    = util.base64,\n    utf8      = util.utf8;\n\n/**\n * Constructs a new writer operation instance.\n * @classdesc Scheduled writer operation.\n * @constructor\n * @param {function(*, Uint8Array, number)} fn Function to call\n * @param {number} len Value byte length\n * @param {*} val Value to write\n * @ignore\n */\nfunction Op(fn, len, val) {\n\n    /**\n     * Function to call.\n     * @type {function(Uint8Array, number, *)}\n     */\n    this.fn = fn;\n\n    /**\n     * Value byte length.\n     * @type {number}\n     */\n    this.len = len;\n\n    /**\n     * Next operation.\n     * @type {Writer.Op|undefined}\n     */\n    this.next = undefined;\n\n    /**\n     * Value to write.\n     * @type {*}\n     */\n    this.val = val; // type varies\n}\n\n/* istanbul ignore next */\nfunction noop() {} // eslint-disable-line no-empty-function\n\n/**\n * Constructs a new writer state instance.\n * @classdesc Copied writer state.\n * @memberof Writer\n * @constructor\n * @param {Writer} writer Writer to copy state from\n * @ignore\n */\nfunction State(writer) {\n\n    /**\n     * Current head.\n     * @type {Writer.Op}\n     */\n    this.head = writer.head;\n\n    /**\n     * Current tail.\n     * @type {Writer.Op}\n     */\n    this.tail = writer.tail;\n\n    /**\n     * Current buffer length.\n     * @type {number}\n     */\n    this.len = writer.len;\n\n    /**\n     * Next state.\n     * @type {State|null}\n     */\n    this.next = writer.states;\n}\n\n/**\n * Constructs a new writer instance.\n * @classdesc Wire format writer using `Uint8Array` if available, otherwise `Array`.\n * @constructor\n */\nfunction Writer() {\n\n    /**\n     * Current length.\n     * @type {number}\n     */\n    this.len = 0;\n\n    /**\n     * Operations head.\n     * @type {Object}\n     */\n    this.head = new Op(noop, 0, 0);\n\n    /**\n     * Operations tail\n     * @type {Object}\n     */\n    this.tail = this.head;\n\n    /**\n     * Linked forked states.\n     * @type {Object|null}\n     */\n    this.states = null;\n\n    // When a value is written, the writer calculates its byte length and puts it into a linked\n    // list of operations to perform when finish() is called. This both allows us to allocate\n    // buffers of the exact required size and reduces the amount of work we have to do compared\n    // to first calculating over objects and then encoding over objects. In our case, the encoding\n    // part is just a linked list walk calling operations with already prepared values.\n}\n\nvar create = function create() {\n    return util.Buffer\n        ? function create_buffer_setup() {\n            return (Writer.create = function create_buffer() {\n                return new BufferWriter();\n            })();\n        }\n        /* istanbul ignore next */\n        : function create_array() {\n            return new Writer();\n        };\n};\n\n/**\n * Creates a new writer.\n * @function\n * @returns {BufferWriter|Writer} A {@link BufferWriter} when Buffers are supported, otherwise a {@link Writer}\n */\nWriter.create = create();\n\n/**\n * Allocates a buffer of the specified size.\n * @param {number} size Buffer size\n * @returns {Uint8Array} Buffer\n */\nWriter.alloc = function alloc(size) {\n    return new util.Array(size);\n};\n\n// Use Uint8Array buffer pool in the browser, just like node does with buffers\n/* istanbul ignore else */\nif (util.Array !== Array)\n    Writer.alloc = util.pool(Writer.alloc, util.Array.prototype.subarray);\n\n/**\n * Pushes a new operation to the queue.\n * @param {function(Uint8Array, number, *)} fn Function to call\n * @param {number} len Value byte length\n * @param {number} val Value to write\n * @returns {Writer} `this`\n * @private\n */\nWriter.prototype._push = function push(fn, len, val) {\n    this.tail = this.tail.next = new Op(fn, len, val);\n    this.len += len;\n    return this;\n};\n\nfunction writeByte(val, buf, pos) {\n    buf[pos] = val & 255;\n}\n\nfunction writeVarint32(val, buf, pos) {\n    while (val > 127) {\n        buf[pos++] = val & 127 | 128;\n        val >>>= 7;\n    }\n    buf[pos] = val;\n}\n\n/**\n * Constructs a new varint writer operation instance.\n * @classdesc Scheduled varint writer operation.\n * @extends Op\n * @constructor\n * @param {number} len Value byte length\n * @param {number} val Value to write\n * @ignore\n */\nfunction VarintOp(len, val) {\n    this.len = len;\n    this.next = undefined;\n    this.val = val;\n}\n\nVarintOp.prototype = Object.create(Op.prototype);\nVarintOp.prototype.fn = writeVarint32;\n\n/**\n * Writes an unsigned 32 bit value as a varint.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.uint32 = function write_uint32(value) {\n    // here, the call to this.push has been inlined and a varint specific Op subclass is used.\n    // uint32 is by far the most frequently used operation and benefits significantly from this.\n    this.len += (this.tail = this.tail.next = new VarintOp(\n        (value = value >>> 0)\n                < 128       ? 1\n        : value < 16384     ? 2\n        : value < 2097152   ? 3\n        : value < 268435456 ? 4\n        :                     5,\n    value)).len;\n    return this;\n};\n\n/**\n * Writes a signed 32 bit value as a varint.\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.int32 = function write_int32(value) {\n    return value < 0\n        ? this._push(writeVarint64, 10, LongBits.fromNumber(value)) // 10 bytes per spec\n        : this.uint32(value);\n};\n\n/**\n * Writes a 32 bit value as a varint, zig-zag encoded.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.sint32 = function write_sint32(value) {\n    return this.uint32((value << 1 ^ value >> 31) >>> 0);\n};\n\nfunction writeVarint64(val, buf, pos) {\n    while (val.hi) {\n        buf[pos++] = val.lo & 127 | 128;\n        val.lo = (val.lo >>> 7 | val.hi << 25) >>> 0;\n        val.hi >>>= 7;\n    }\n    while (val.lo > 127) {\n        buf[pos++] = val.lo & 127 | 128;\n        val.lo = val.lo >>> 7;\n    }\n    buf[pos++] = val.lo;\n}\n\n/**\n * Writes an unsigned 64 bit value as a varint.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.uint64 = function write_uint64(value) {\n    var bits = LongBits.from(value);\n    return this._push(writeVarint64, bits.length(), bits);\n};\n\n/**\n * Writes a signed 64 bit value as a varint.\n * @function\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.int64 = Writer.prototype.uint64;\n\n/**\n * Writes a signed 64 bit value as a varint, zig-zag encoded.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.sint64 = function write_sint64(value) {\n    var bits = LongBits.from(value).zzEncode();\n    return this._push(writeVarint64, bits.length(), bits);\n};\n\n/**\n * Writes a boolish value as a varint.\n * @param {boolean} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.bool = function write_bool(value) {\n    return this._push(writeByte, 1, value ? 1 : 0);\n};\n\nfunction writeFixed32(val, buf, pos) {\n    buf[pos    ] =  val         & 255;\n    buf[pos + 1] =  val >>> 8   & 255;\n    buf[pos + 2] =  val >>> 16  & 255;\n    buf[pos + 3] =  val >>> 24;\n}\n\n/**\n * Writes an unsigned 32 bit value as fixed 32 bits.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.fixed32 = function write_fixed32(value) {\n    return this._push(writeFixed32, 4, value >>> 0);\n};\n\n/**\n * Writes a signed 32 bit value as fixed 32 bits.\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.sfixed32 = Writer.prototype.fixed32;\n\n/**\n * Writes an unsigned 64 bit value as fixed 64 bits.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.fixed64 = function write_fixed64(value) {\n    var bits = LongBits.from(value);\n    return this._push(writeFixed32, 4, bits.lo)._push(writeFixed32, 4, bits.hi);\n};\n\n/**\n * Writes a signed 64 bit value as fixed 64 bits.\n * @function\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.sfixed64 = Writer.prototype.fixed64;\n\n/**\n * Writes a float (32 bit).\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.float = function write_float(value) {\n    return this._push(util.float.writeFloatLE, 4, value);\n};\n\n/**\n * Writes a double (64 bit float).\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.double = function write_double(value) {\n    return this._push(util.float.writeDoubleLE, 8, value);\n};\n\nvar writeBytes = util.Array.prototype.set\n    ? function writeBytes_set(val, buf, pos) {\n        buf.set(val, pos); // also works for plain array values\n    }\n    /* istanbul ignore next */\n    : function writeBytes_for(val, buf, pos) {\n        for (var i = 0; i < val.length; ++i)\n            buf[pos + i] = val[i];\n    };\n\n/**\n * Writes a sequence of bytes.\n * @param {Uint8Array|string} value Buffer or base64 encoded string to write\n * @returns {Writer} `this`\n */\nWriter.prototype.bytes = function write_bytes(value) {\n    var len = value.length >>> 0;\n    if (!len)\n        return this._push(writeByte, 1, 0);\n    if (util.isString(value)) {\n        var buf = Writer.alloc(len = base64.length(value));\n        base64.decode(value, buf, 0);\n        value = buf;\n    }\n    return this.uint32(len)._push(writeBytes, len, value);\n};\n\n/**\n * Writes a string.\n * @param {string} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.string = function write_string(value) {\n    var len = utf8.length(value);\n    return len\n        ? this.uint32(len)._push(utf8.write, len, value)\n        : this._push(writeByte, 1, 0);\n};\n\n/**\n * Forks this writer's state by pushing it to a stack.\n * Calling {@link Writer#reset|reset} or {@link Writer#ldelim|ldelim} resets the writer to the previous state.\n * @returns {Writer} `this`\n */\nWriter.prototype.fork = function fork() {\n    this.states = new State(this);\n    this.head = this.tail = new Op(noop, 0, 0);\n    this.len = 0;\n    return this;\n};\n\n/**\n * Resets this instance to the last state.\n * @returns {Writer} `this`\n */\nWriter.prototype.reset = function reset() {\n    if (this.states) {\n        this.head   = this.states.head;\n        this.tail   = this.states.tail;\n        this.len    = this.states.len;\n        this.states = this.states.next;\n    } else {\n        this.head = this.tail = new Op(noop, 0, 0);\n        this.len  = 0;\n    }\n    return this;\n};\n\n/**\n * Resets to the last state and appends the fork state's current write length as a varint followed by its operations.\n * @returns {Writer} `this`\n */\nWriter.prototype.ldelim = function ldelim() {\n    var head = this.head,\n        tail = this.tail,\n        len  = this.len;\n    this.reset().uint32(len);\n    if (len) {\n        this.tail.next = head.next; // skip noop\n        this.tail = tail;\n        this.len += len;\n    }\n    return this;\n};\n\n/**\n * Finishes the write operation.\n * @returns {Uint8Array} Finished buffer\n */\nWriter.prototype.finish = function finish() {\n    var head = this.head.next, // skip noop\n        buf  = this.constructor.alloc(this.len),\n        pos  = 0;\n    while (head) {\n        head.fn(head.val, buf, pos);\n        pos += head.len;\n        head = head.next;\n    }\n    // this.head = this.tail = null;\n    return buf;\n};\n\nWriter._configure = function(BufferWriter_) {\n    BufferWriter = BufferWriter_;\n    Writer.create = create();\n    BufferWriter._configure();\n};\n","\"use strict\";\nmodule.exports = BufferWriter;\n\n// extends Writer\nvar Writer = require(\"./writer\");\n(BufferWriter.prototype = Object.create(Writer.prototype)).constructor = BufferWriter;\n\nvar util = require(\"./util/minimal\");\n\n/**\n * Constructs a new buffer writer instance.\n * @classdesc Wire format writer using node buffers.\n * @extends Writer\n * @constructor\n */\nfunction BufferWriter() {\n    Writer.call(this);\n}\n\nBufferWriter._configure = function () {\n    /**\n     * Allocates a buffer of the specified size.\n     * @function\n     * @param {number} size Buffer size\n     * @returns {Buffer} Buffer\n     */\n    BufferWriter.alloc = util._Buffer_allocUnsafe;\n\n    BufferWriter.writeBytesBuffer = util.Buffer && util.Buffer.prototype instanceof Uint8Array && util.Buffer.prototype.set.name === \"set\"\n        ? function writeBytesBuffer_set(val, buf, pos) {\n          buf.set(val, pos); // faster than copy (requires node >= 4 where Buffers extend Uint8Array and set is properly inherited)\n          // also works for plain array values\n        }\n        /* istanbul ignore next */\n        : function writeBytesBuffer_copy(val, buf, pos) {\n          if (val.copy) // Buffer values\n            val.copy(buf, pos, 0, val.length);\n          else for (var i = 0; i < val.length;) // plain array values\n            buf[pos++] = val[i++];\n        };\n};\n\n\n/**\n * @override\n */\nBufferWriter.prototype.bytes = function write_bytes_buffer(value) {\n    if (util.isString(value))\n        value = util._Buffer_from(value, \"base64\");\n    var len = value.length >>> 0;\n    this.uint32(len);\n    if (len)\n        this._push(BufferWriter.writeBytesBuffer, len, value);\n    return this;\n};\n\nfunction writeStringBuffer(val, buf, pos) {\n    if (val.length < 40) // plain js is faster for short strings (probably due to redundant assertions)\n        util.utf8.write(val, buf, pos);\n    else if (buf.utf8Write)\n        buf.utf8Write(val, pos);\n    else\n        buf.write(val, pos);\n}\n\n/**\n * @override\n */\nBufferWriter.prototype.string = function write_string_buffer(value) {\n    var len = util.Buffer.byteLength(value);\n    this.uint32(len);\n    if (len)\n        this._push(writeStringBuffer, len, value);\n    return this;\n};\n\n\n/**\n * Finishes the write operation.\n * @name BufferWriter#finish\n * @function\n * @returns {Buffer} Finished buffer\n */\n\nBufferWriter._configure();\n","\"use strict\";\nmodule.exports = Reader;\n\nvar util      = require(\"./util/minimal\");\n\nvar BufferReader; // cyclic\n\nvar LongBits  = util.LongBits,\n    utf8      = util.utf8;\n\n/* istanbul ignore next */\nfunction indexOutOfRange(reader, writeLength) {\n    return RangeError(\"index out of range: \" + reader.pos + \" + \" + (writeLength || 1) + \" > \" + reader.len);\n}\n\n/**\n * Constructs a new reader instance using the specified buffer.\n * @classdesc Wire format reader using `Uint8Array` if available, otherwise `Array`.\n * @constructor\n * @param {Uint8Array} buffer Buffer to read from\n */\nfunction Reader(buffer) {\n\n    /**\n     * Read buffer.\n     * @type {Uint8Array}\n     */\n    this.buf = buffer;\n\n    /**\n     * Read buffer position.\n     * @type {number}\n     */\n    this.pos = 0;\n\n    /**\n     * Read buffer length.\n     * @type {number}\n     */\n    this.len = buffer.length;\n}\n\nvar create_array = typeof Uint8Array !== \"undefined\"\n    ? function create_typed_array(buffer) {\n        if (buffer instanceof Uint8Array || Array.isArray(buffer))\n            return new Reader(buffer);\n        throw Error(\"illegal buffer\");\n    }\n    /* istanbul ignore next */\n    : function create_array(buffer) {\n        if (Array.isArray(buffer))\n            return new Reader(buffer);\n        throw Error(\"illegal buffer\");\n    };\n\nvar create = function create() {\n    return util.Buffer\n        ? function create_buffer_setup(buffer) {\n            return (Reader.create = function create_buffer(buffer) {\n                return util.Buffer.isBuffer(buffer)\n                    ? new BufferReader(buffer)\n                    /* istanbul ignore next */\n                    : create_array(buffer);\n            })(buffer);\n        }\n        /* istanbul ignore next */\n        : create_array;\n};\n\n/**\n * Creates a new reader using the specified buffer.\n * @function\n * @param {Uint8Array|Buffer} buffer Buffer to read from\n * @returns {Reader|BufferReader} A {@link BufferReader} if `buffer` is a Buffer, otherwise a {@link Reader}\n * @throws {Error} If `buffer` is not a valid buffer\n */\nReader.create = create();\n\nReader.prototype._slice = util.Array.prototype.subarray || /* istanbul ignore next */ util.Array.prototype.slice;\n\n/**\n * Reads a varint as an unsigned 32 bit value.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.uint32 = (function read_uint32_setup() {\n    var value = 4294967295; // optimizer type-hint, tends to deopt otherwise (?!)\n    return function read_uint32() {\n        value = (         this.buf[this.pos] & 127       ) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) <<  7) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) << 14) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) << 21) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] &  15) << 28) >>> 0; if (this.buf[this.pos++] < 128) return value;\n\n        /* istanbul ignore if */\n        if ((this.pos += 5) > this.len) {\n            this.pos = this.len;\n            throw indexOutOfRange(this, 10);\n        }\n        return value;\n    };\n})();\n\n/**\n * Reads a varint as a signed 32 bit value.\n * @returns {number} Value read\n */\nReader.prototype.int32 = function read_int32() {\n    return this.uint32() | 0;\n};\n\n/**\n * Reads a zig-zag encoded varint as a signed 32 bit value.\n * @returns {number} Value read\n */\nReader.prototype.sint32 = function read_sint32() {\n    var value = this.uint32();\n    return value >>> 1 ^ -(value & 1) | 0;\n};\n\n/* eslint-disable no-invalid-this */\n\nfunction readLongVarint() {\n    // tends to deopt with local vars for octet etc.\n    var bits = new LongBits(0, 0);\n    var i = 0;\n    if (this.len - this.pos > 4) { // fast route (lo)\n        for (; i < 4; ++i) {\n            // 1st..4th\n            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n        // 5th\n        bits.lo = (bits.lo | (this.buf[this.pos] & 127) << 28) >>> 0;\n        bits.hi = (bits.hi | (this.buf[this.pos] & 127) >>  4) >>> 0;\n        if (this.buf[this.pos++] < 128)\n            return bits;\n        i = 0;\n    } else {\n        for (; i < 3; ++i) {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n            // 1st..3th\n            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n        // 4th\n        bits.lo = (bits.lo | (this.buf[this.pos++] & 127) << i * 7) >>> 0;\n        return bits;\n    }\n    if (this.len - this.pos > 4) { // fast route (hi)\n        for (; i < 5; ++i) {\n            // 6th..10th\n            bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n    } else {\n        for (; i < 5; ++i) {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n            // 6th..10th\n            bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n    }\n    /* istanbul ignore next */\n    throw Error(\"invalid varint encoding\");\n}\n\n/* eslint-enable no-invalid-this */\n\n/**\n * Reads a varint as a signed 64 bit value.\n * @name Reader#int64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a varint as an unsigned 64 bit value.\n * @name Reader#uint64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a zig-zag encoded varint as a signed 64 bit value.\n * @name Reader#sint64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a varint as a boolean.\n * @returns {boolean} Value read\n */\nReader.prototype.bool = function read_bool() {\n    return this.uint32() !== 0;\n};\n\nfunction readFixed32_end(buf, end) { // note that this uses `end`, not `pos`\n    return (buf[end - 4]\n          | buf[end - 3] << 8\n          | buf[end - 2] << 16\n          | buf[end - 1] << 24) >>> 0;\n}\n\n/**\n * Reads fixed 32 bits as an unsigned 32 bit integer.\n * @returns {number} Value read\n */\nReader.prototype.fixed32 = function read_fixed32() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    return readFixed32_end(this.buf, this.pos += 4);\n};\n\n/**\n * Reads fixed 32 bits as a signed 32 bit integer.\n * @returns {number} Value read\n */\nReader.prototype.sfixed32 = function read_sfixed32() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    return readFixed32_end(this.buf, this.pos += 4) | 0;\n};\n\n/* eslint-disable no-invalid-this */\n\nfunction readFixed64(/* this: Reader */) {\n\n    /* istanbul ignore if */\n    if (this.pos + 8 > this.len)\n        throw indexOutOfRange(this, 8);\n\n    return new LongBits(readFixed32_end(this.buf, this.pos += 4), readFixed32_end(this.buf, this.pos += 4));\n}\n\n/* eslint-enable no-invalid-this */\n\n/**\n * Reads fixed 64 bits.\n * @name Reader#fixed64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads zig-zag encoded fixed 64 bits.\n * @name Reader#sfixed64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a float (32 bit) as a number.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.float = function read_float() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    var value = util.float.readFloatLE(this.buf, this.pos);\n    this.pos += 4;\n    return value;\n};\n\n/**\n * Reads a double (64 bit float) as a number.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.double = function read_double() {\n\n    /* istanbul ignore if */\n    if (this.pos + 8 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    var value = util.float.readDoubleLE(this.buf, this.pos);\n    this.pos += 8;\n    return value;\n};\n\n/**\n * Reads a sequence of bytes preceeded by its length as a varint.\n * @returns {Uint8Array} Value read\n */\nReader.prototype.bytes = function read_bytes() {\n    var length = this.uint32(),\n        start  = this.pos,\n        end    = this.pos + length;\n\n    /* istanbul ignore if */\n    if (end > this.len)\n        throw indexOutOfRange(this, length);\n\n    this.pos += length;\n    if (Array.isArray(this.buf)) // plain array\n        return this.buf.slice(start, end);\n\n    if (start === end) { // fix for IE 10/Win8 and others' subarray returning array of size 1\n        var nativeBuffer = util.Buffer;\n        return nativeBuffer\n            ? nativeBuffer.alloc(0)\n            : new this.buf.constructor(0);\n    }\n    return this._slice.call(this.buf, start, end);\n};\n\n/**\n * Reads a string preceeded by its byte length as a varint.\n * @returns {string} Value read\n */\nReader.prototype.string = function read_string() {\n    var bytes = this.bytes();\n    return utf8.read(bytes, 0, bytes.length);\n};\n\n/**\n * Skips the specified number of bytes if specified, otherwise skips a varint.\n * @param {number} [length] Length if known, otherwise a varint is assumed\n * @returns {Reader} `this`\n */\nReader.prototype.skip = function skip(length) {\n    if (typeof length === \"number\") {\n        /* istanbul ignore if */\n        if (this.pos + length > this.len)\n            throw indexOutOfRange(this, length);\n        this.pos += length;\n    } else {\n        do {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n        } while (this.buf[this.pos++] & 128);\n    }\n    return this;\n};\n\n/**\n * Skips the next element of the specified wire type.\n * @param {number} wireType Wire type received\n * @returns {Reader} `this`\n */\nReader.prototype.skipType = function(wireType) {\n    switch (wireType) {\n        case 0:\n            this.skip();\n            break;\n        case 1:\n            this.skip(8);\n            break;\n        case 2:\n            this.skip(this.uint32());\n            break;\n        case 3:\n            while ((wireType = this.uint32() & 7) !== 4) {\n                this.skipType(wireType);\n            }\n            break;\n        case 5:\n            this.skip(4);\n            break;\n\n        /* istanbul ignore next */\n        default:\n            throw Error(\"invalid wire type \" + wireType + \" at offset \" + this.pos);\n    }\n    return this;\n};\n\nReader._configure = function(BufferReader_) {\n    BufferReader = BufferReader_;\n    Reader.create = create();\n    BufferReader._configure();\n\n    var fn = util.Long ? \"toLong\" : /* istanbul ignore next */ \"toNumber\";\n    util.merge(Reader.prototype, {\n\n        int64: function read_int64() {\n            return readLongVarint.call(this)[fn](false);\n        },\n\n        uint64: function read_uint64() {\n            return readLongVarint.call(this)[fn](true);\n        },\n\n        sint64: function read_sint64() {\n            return readLongVarint.call(this).zzDecode()[fn](false);\n        },\n\n        fixed64: function read_fixed64() {\n            return readFixed64.call(this)[fn](true);\n        },\n\n        sfixed64: function read_sfixed64() {\n            return readFixed64.call(this)[fn](false);\n        }\n\n    });\n};\n","\"use strict\";\nmodule.exports = BufferReader;\n\n// extends Reader\nvar Reader = require(\"./reader\");\n(BufferReader.prototype = Object.create(Reader.prototype)).constructor = BufferReader;\n\nvar util = require(\"./util/minimal\");\n\n/**\n * Constructs a new buffer reader instance.\n * @classdesc Wire format reader using node buffers.\n * @extends Reader\n * @constructor\n * @param {Buffer} buffer Buffer to read from\n */\nfunction BufferReader(buffer) {\n    Reader.call(this, buffer);\n\n    /**\n     * Read buffer.\n     * @name BufferReader#buf\n     * @type {Buffer}\n     */\n}\n\nBufferReader._configure = function () {\n    /* istanbul ignore else */\n    if (util.Buffer)\n        BufferReader.prototype._slice = util.Buffer.prototype.slice;\n};\n\n\n/**\n * @override\n */\nBufferReader.prototype.string = function read_string_buffer() {\n    var len = this.uint32(); // modifies pos\n    return this.buf.utf8Slice\n        ? this.buf.utf8Slice(this.pos, this.pos = Math.min(this.pos + len, this.len))\n        : this.buf.toString(\"utf-8\", this.pos, this.pos = Math.min(this.pos + len, this.len));\n};\n\n/**\n * Reads a sequence of bytes preceeded by its length as a varint.\n * @name BufferReader#bytes\n * @function\n * @returns {Buffer} Value read\n */\n\nBufferReader._configure();\n","\"use strict\";\nmodule.exports = Service;\n\nvar util = require(\"../util/minimal\");\n\n// Extends EventEmitter\n(Service.prototype = Object.create(util.EventEmitter.prototype)).constructor = Service;\n\n/**\n * A service method callback as used by {@link rpc.ServiceMethod|ServiceMethod}.\n *\n * Differs from {@link RPCImplCallback} in that it is an actual callback of a service method which may not return `response = null`.\n * @typedef rpc.ServiceMethodCallback\n * @template TRes extends Message<TRes>\n * @type {function}\n * @param {Error|null} error Error, if any\n * @param {TRes} [response] Response message\n * @returns {undefined}\n */\n\n/**\n * A service method part of a {@link rpc.Service} as created by {@link Service.create}.\n * @typedef rpc.ServiceMethod\n * @template TReq extends Message<TReq>\n * @template TRes extends Message<TRes>\n * @type {function}\n * @param {TReq|Properties<TReq>} request Request message or plain object\n * @param {rpc.ServiceMethodCallback<TRes>} [callback] Node-style callback called with the error, if any, and the response message\n * @returns {Promise<Message<TRes>>} Promise if `callback` has been omitted, otherwise `undefined`\n */\n\n/**\n * Constructs a new RPC service instance.\n * @classdesc An RPC service as returned by {@link Service#create}.\n * @exports rpc.Service\n * @extends util.EventEmitter\n * @constructor\n * @param {RPCImpl} rpcImpl RPC implementation\n * @param {boolean} [requestDelimited=false] Whether requests are length-delimited\n * @param {boolean} [responseDelimited=false] Whether responses are length-delimited\n */\nfunction Service(rpcImpl, requestDelimited, responseDelimited) {\n\n    if (typeof rpcImpl !== \"function\")\n        throw TypeError(\"rpcImpl must be a function\");\n\n    util.EventEmitter.call(this);\n\n    /**\n     * RPC implementation. Becomes `null` once the service is ended.\n     * @type {RPCImpl|null}\n     */\n    this.rpcImpl = rpcImpl;\n\n    /**\n     * Whether requests are length-delimited.\n     * @type {boolean}\n     */\n    this.requestDelimited = Boolean(requestDelimited);\n\n    /**\n     * Whether responses are length-delimited.\n     * @type {boolean}\n     */\n    this.responseDelimited = Boolean(responseDelimited);\n}\n\n/**\n * Calls a service method through {@link rpc.Service#rpcImpl|rpcImpl}.\n * @param {Method|rpc.ServiceMethod<TReq,TRes>} method Reflected or static method\n * @param {Constructor<TReq>} requestCtor Request constructor\n * @param {Constructor<TRes>} responseCtor Response constructor\n * @param {TReq|Properties<TReq>} request Request message or plain object\n * @param {rpc.ServiceMethodCallback<TRes>} callback Service callback\n * @returns {undefined}\n * @template TReq extends Message<TReq>\n * @template TRes extends Message<TRes>\n */\nService.prototype.rpcCall = function rpcCall(method, requestCtor, responseCtor, request, callback) {\n\n    if (!request)\n        throw TypeError(\"request must be specified\");\n\n    var self = this;\n    if (!callback)\n        return util.asPromise(rpcCall, self, method, requestCtor, responseCtor, request);\n\n    if (!self.rpcImpl) {\n        setTimeout(function() { callback(Error(\"already ended\")); }, 0);\n        return undefined;\n    }\n\n    try {\n        return self.rpcImpl(\n            method,\n            requestCtor[self.requestDelimited ? \"encodeDelimited\" : \"encode\"](request).finish(),\n            function rpcCallback(err, response) {\n\n                if (err) {\n                    self.emit(\"error\", err, method);\n                    return callback(err);\n                }\n\n                if (response === null) {\n                    self.end(/* endedByRPC */ true);\n                    return undefined;\n                }\n\n                if (!(response instanceof responseCtor)) {\n                    try {\n                        response = responseCtor[self.responseDelimited ? \"decodeDelimited\" : \"decode\"](response);\n                    } catch (err) {\n                        self.emit(\"error\", err, method);\n                        return callback(err);\n                    }\n                }\n\n                self.emit(\"data\", response, method);\n                return callback(null, response);\n            }\n        );\n    } catch (err) {\n        self.emit(\"error\", err, method);\n        setTimeout(function() { callback(err); }, 0);\n        return undefined;\n    }\n};\n\n/**\n * Ends this service and emits the `end` event.\n * @param {boolean} [endedByRPC=false] Whether the service has been ended by the RPC implementation.\n * @returns {rpc.Service} `this`\n */\nService.prototype.end = function end(endedByRPC) {\n    if (this.rpcImpl) {\n        if (!endedByRPC) // signal end to rpcImpl\n            this.rpcImpl(null, null, null);\n        this.rpcImpl = null;\n        this.emit(\"end\").off();\n    }\n    return this;\n};\n","\"use strict\";\n\n/**\n * Streaming RPC helpers.\n * @namespace\n */\nvar rpc = exports;\n\n/**\n * RPC implementation passed to {@link Service#create} performing a service request on network level, i.e. by utilizing http requests or websockets.\n * @typedef RPCImpl\n * @type {function}\n * @param {Method|rpc.ServiceMethod<Message<{}>,Message<{}>>} method Reflected or static method being called\n * @param {Uint8Array} requestData Request data\n * @param {RPCImplCallback} callback Callback function\n * @returns {undefined}\n * @example\n * function rpcImpl(method, requestData, callback) {\n *     if (protobuf.util.lcFirst(method.name) !== \"myMethod\") // compatible with static code\n *         throw Error(\"no such method\");\n *     asynchronouslyObtainAResponse(requestData, function(err, responseData) {\n *         callback(err, responseData);\n *     });\n * }\n */\n\n/**\n * Node-style callback as used by {@link RPCImpl}.\n * @typedef RPCImplCallback\n * @type {function}\n * @param {Error|null} error Error, if any, otherwise `null`\n * @param {Uint8Array|null} [response] Response data or `null` to signal end of stream, if there hasn't been an error\n * @returns {undefined}\n */\n\nrpc.Service = require(\"./rpc/service\");\n","\"use strict\";\nmodule.exports = {};\n\n/**\n * Named roots.\n * This is where pbjs stores generated structures (the option `-r, --root` specifies a name).\n * Can also be used manually to make roots available across modules.\n * @name roots\n * @type {Object.<string,Root>}\n * @example\n * // pbjs -r myroot -o compiled.js ...\n *\n * // in another module:\n * require(\"./compiled.js\");\n *\n * // in any subsequent module:\n * var root = protobuf.roots[\"myroot\"];\n */\n","\"use strict\";\nvar protobuf = exports;\n\n/**\n * Build type, one of `\"full\"`, `\"light\"` or `\"minimal\"`.\n * @name build\n * @type {string}\n * @const\n */\nprotobuf.build = \"minimal\";\n\n// Serialization\nprotobuf.Writer       = require(\"./writer\");\nprotobuf.BufferWriter = require(\"./writer_buffer\");\nprotobuf.Reader       = require(\"./reader\");\nprotobuf.BufferReader = require(\"./reader_buffer\");\n\n// Utility\nprotobuf.util         = require(\"./util/minimal\");\nprotobuf.rpc          = require(\"./rpc\");\nprotobuf.roots        = require(\"./roots\");\nprotobuf.configure    = configure;\n\n/* istanbul ignore next */\n/**\n * Reconfigures the library according to the environment.\n * @returns {undefined}\n */\nfunction configure() {\n    protobuf.util._configure();\n    protobuf.Writer._configure(protobuf.BufferWriter);\n    protobuf.Reader._configure(protobuf.BufferReader);\n}\n\n// Set up buffer utility according to the environment\nconfigure();\n","// minimal library entry point.\n\n\"use strict\";\nmodule.exports = require(\"./src/index-minimal\");\n","/*eslint-disable block-scoped-var, id-length, no-control-regex, no-magic-numbers, no-prototype-builtins, no-redeclare, no-shadow, no-var, sort-vars*/\n\"use strict\";\n\nvar $protobuf = require(\"protobufjs/minimal\");\n\n// Common aliases\nvar $Reader = $protobuf.Reader, $Writer = $protobuf.Writer, $util = $protobuf.util;\n\n// Exported root namespace\nvar $root = $protobuf.roots[\"default\"] || ($protobuf.roots[\"default\"] = {});\n\n$root.EddsaAddRequest = (function() {\n\n    /**\n     * Properties of an EddsaAddRequest.\n     * @exports IEddsaAddRequest\n     * @interface IEddsaAddRequest\n     * @property {number} num1 EddsaAddRequest num1\n     * @property {number} num2 EddsaAddRequest num2\n     */\n\n    /**\n     * Constructs a new EddsaAddRequest.\n     * @exports EddsaAddRequest\n     * @classdesc Represents an EddsaAddRequest.\n     * @implements IEddsaAddRequest\n     * @constructor\n     * @param {IEddsaAddRequest=} [properties] Properties to set\n     */\n    function EddsaAddRequest(properties) {\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * EddsaAddRequest num1.\n     * @member {number} num1\n     * @memberof EddsaAddRequest\n     * @instance\n     */\n    EddsaAddRequest.prototype.num1 = 0;\n\n    /**\n     * EddsaAddRequest num2.\n     * @member {number} num2\n     * @memberof EddsaAddRequest\n     * @instance\n     */\n    EddsaAddRequest.prototype.num2 = 0;\n\n    /**\n     * Creates a new EddsaAddRequest instance using the specified properties.\n     * @function create\n     * @memberof EddsaAddRequest\n     * @static\n     * @param {IEddsaAddRequest=} [properties] Properties to set\n     * @returns {EddsaAddRequest} EddsaAddRequest instance\n     */\n    EddsaAddRequest.create = function create(properties) {\n        return new EddsaAddRequest(properties);\n    };\n\n    /**\n     * Encodes the specified EddsaAddRequest message. Does not implicitly {@link EddsaAddRequest.verify|verify} messages.\n     * @function encode\n     * @memberof EddsaAddRequest\n     * @static\n     * @param {IEddsaAddRequest} message EddsaAddRequest message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    EddsaAddRequest.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.num1);\n        writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.num2);\n        return writer;\n    };\n\n    /**\n     * Encodes the specified EddsaAddRequest message, length delimited. Does not implicitly {@link EddsaAddRequest.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof EddsaAddRequest\n     * @static\n     * @param {IEddsaAddRequest} message EddsaAddRequest message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    EddsaAddRequest.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes an EddsaAddRequest message from the specified reader or buffer.\n     * @function decode\n     * @memberof EddsaAddRequest\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {EddsaAddRequest} EddsaAddRequest\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    EddsaAddRequest.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.EddsaAddRequest();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 2: {\n                    message.num1 = reader.uint32();\n                    break;\n                }\n            case 3: {\n                    message.num2 = reader.uint32();\n                    break;\n                }\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        if (!message.hasOwnProperty(\"num1\"))\n            throw $util.ProtocolError(\"missing required 'num1'\", { instance: message });\n        if (!message.hasOwnProperty(\"num2\"))\n            throw $util.ProtocolError(\"missing required 'num2'\", { instance: message });\n        return message;\n    };\n\n    /**\n     * Decodes an EddsaAddRequest message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof EddsaAddRequest\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {EddsaAddRequest} EddsaAddRequest\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    EddsaAddRequest.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies an EddsaAddRequest message.\n     * @function verify\n     * @memberof EddsaAddRequest\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    EddsaAddRequest.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (!$util.isInteger(message.num1))\n            return \"num1: integer expected\";\n        if (!$util.isInteger(message.num2))\n            return \"num2: integer expected\";\n        return null;\n    };\n\n    /**\n     * Creates an EddsaAddRequest message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof EddsaAddRequest\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {EddsaAddRequest} EddsaAddRequest\n     */\n    EddsaAddRequest.fromObject = function fromObject(object) {\n        if (object instanceof $root.EddsaAddRequest)\n            return object;\n        var message = new $root.EddsaAddRequest();\n        if (object.num1 != null)\n            message.num1 = object.num1 >>> 0;\n        if (object.num2 != null)\n            message.num2 = object.num2 >>> 0;\n        return message;\n    };\n\n    /**\n     * Creates a plain object from an EddsaAddRequest message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof EddsaAddRequest\n     * @static\n     * @param {EddsaAddRequest} message EddsaAddRequest\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    EddsaAddRequest.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.defaults) {\n            object.num1 = 0;\n            object.num2 = 0;\n        }\n        if (message.num1 != null && message.hasOwnProperty(\"num1\"))\n            object.num1 = message.num1;\n        if (message.num2 != null && message.hasOwnProperty(\"num2\"))\n            object.num2 = message.num2;\n        return object;\n    };\n\n    /**\n     * Converts this EddsaAddRequest to JSON.\n     * @function toJSON\n     * @memberof EddsaAddRequest\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    EddsaAddRequest.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    /**\n     * Gets the default type url for EddsaAddRequest\n     * @function getTypeUrl\n     * @memberof EddsaAddRequest\n     * @static\n     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default \"type.googleapis.com\")\n     * @returns {string} The default type url\n     */\n    EddsaAddRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {\n        if (typeUrlPrefix === undefined) {\n            typeUrlPrefix = \"type.googleapis.com\";\n        }\n        return typeUrlPrefix + \"/EddsaAddRequest\";\n    };\n\n    return EddsaAddRequest;\n})();\n\n$root.EddsaAddResponse = (function() {\n\n    /**\n     * Properties of an EddsaAddResponse.\n     * @exports IEddsaAddResponse\n     * @interface IEddsaAddResponse\n     * @property {number} sum EddsaAddResponse sum\n     */\n\n    /**\n     * Constructs a new EddsaAddResponse.\n     * @exports EddsaAddResponse\n     * @classdesc Represents an EddsaAddResponse.\n     * @implements IEddsaAddResponse\n     * @constructor\n     * @param {IEddsaAddResponse=} [properties] Properties to set\n     */\n    function EddsaAddResponse(properties) {\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * EddsaAddResponse sum.\n     * @member {number} sum\n     * @memberof EddsaAddResponse\n     * @instance\n     */\n    EddsaAddResponse.prototype.sum = 0;\n\n    /**\n     * Creates a new EddsaAddResponse instance using the specified properties.\n     * @function create\n     * @memberof EddsaAddResponse\n     * @static\n     * @param {IEddsaAddResponse=} [properties] Properties to set\n     * @returns {EddsaAddResponse} EddsaAddResponse instance\n     */\n    EddsaAddResponse.create = function create(properties) {\n        return new EddsaAddResponse(properties);\n    };\n\n    /**\n     * Encodes the specified EddsaAddResponse message. Does not implicitly {@link EddsaAddResponse.verify|verify} messages.\n     * @function encode\n     * @memberof EddsaAddResponse\n     * @static\n     * @param {IEddsaAddResponse} message EddsaAddResponse message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    EddsaAddResponse.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.sum);\n        return writer;\n    };\n\n    /**\n     * Encodes the specified EddsaAddResponse message, length delimited. Does not implicitly {@link EddsaAddResponse.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof EddsaAddResponse\n     * @static\n     * @param {IEddsaAddResponse} message EddsaAddResponse message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    EddsaAddResponse.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes an EddsaAddResponse message from the specified reader or buffer.\n     * @function decode\n     * @memberof EddsaAddResponse\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {EddsaAddResponse} EddsaAddResponse\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    EddsaAddResponse.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.EddsaAddResponse();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 2: {\n                    message.sum = reader.uint32();\n                    break;\n                }\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        if (!message.hasOwnProperty(\"sum\"))\n            throw $util.ProtocolError(\"missing required 'sum'\", { instance: message });\n        return message;\n    };\n\n    /**\n     * Decodes an EddsaAddResponse message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof EddsaAddResponse\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {EddsaAddResponse} EddsaAddResponse\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    EddsaAddResponse.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies an EddsaAddResponse message.\n     * @function verify\n     * @memberof EddsaAddResponse\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    EddsaAddResponse.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (!$util.isInteger(message.sum))\n            return \"sum: integer expected\";\n        return null;\n    };\n\n    /**\n     * Creates an EddsaAddResponse message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof EddsaAddResponse\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {EddsaAddResponse} EddsaAddResponse\n     */\n    EddsaAddResponse.fromObject = function fromObject(object) {\n        if (object instanceof $root.EddsaAddResponse)\n            return object;\n        var message = new $root.EddsaAddResponse();\n        if (object.sum != null)\n            message.sum = object.sum >>> 0;\n        return message;\n    };\n\n    /**\n     * Creates a plain object from an EddsaAddResponse message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof EddsaAddResponse\n     * @static\n     * @param {EddsaAddResponse} message EddsaAddResponse\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    EddsaAddResponse.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.defaults)\n            object.sum = 0;\n        if (message.sum != null && message.hasOwnProperty(\"sum\"))\n            object.sum = message.sum;\n        return object;\n    };\n\n    /**\n     * Converts this EddsaAddResponse to JSON.\n     * @function toJSON\n     * @memberof EddsaAddResponse\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    EddsaAddResponse.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    /**\n     * Gets the default type url for EddsaAddResponse\n     * @function getTypeUrl\n     * @memberof EddsaAddResponse\n     * @static\n     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default \"type.googleapis.com\")\n     * @returns {string} The default type url\n     */\n    EddsaAddResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {\n        if (typeUrlPrefix === undefined) {\n            typeUrlPrefix = \"type.googleapis.com\";\n        }\n        return typeUrlPrefix + \"/EddsaAddResponse\";\n    };\n\n    return EddsaAddResponse;\n})();\n\n$root.GenericMessage = (function() {\n\n    /**\n     * Properties of a GenericMessage.\n     * @exports IGenericMessage\n     * @interface IGenericMessage\n     * @property {string} callId GenericMessage callId\n     * @property {string} payload GenericMessage payload\n     */\n\n    /**\n     * Constructs a new GenericMessage.\n     * @exports GenericMessage\n     * @classdesc Represents a GenericMessage.\n     * @implements IGenericMessage\n     * @constructor\n     * @param {IGenericMessage=} [properties] Properties to set\n     */\n    function GenericMessage(properties) {\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * GenericMessage callId.\n     * @member {string} callId\n     * @memberof GenericMessage\n     * @instance\n     */\n    GenericMessage.prototype.callId = \"\";\n\n    /**\n     * GenericMessage payload.\n     * @member {string} payload\n     * @memberof GenericMessage\n     * @instance\n     */\n    GenericMessage.prototype.payload = \"\";\n\n    /**\n     * Creates a new GenericMessage instance using the specified properties.\n     * @function create\n     * @memberof GenericMessage\n     * @static\n     * @param {IGenericMessage=} [properties] Properties to set\n     * @returns {GenericMessage} GenericMessage instance\n     */\n    GenericMessage.create = function create(properties) {\n        return new GenericMessage(properties);\n    };\n\n    /**\n     * Encodes the specified GenericMessage message. Does not implicitly {@link GenericMessage.verify|verify} messages.\n     * @function encode\n     * @memberof GenericMessage\n     * @static\n     * @param {IGenericMessage} message GenericMessage message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    GenericMessage.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        writer.uint32(/* id 1, wireType 2 =*/10).string(message.callId);\n        writer.uint32(/* id 2, wireType 2 =*/18).string(message.payload);\n        return writer;\n    };\n\n    /**\n     * Encodes the specified GenericMessage message, length delimited. Does not implicitly {@link GenericMessage.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof GenericMessage\n     * @static\n     * @param {IGenericMessage} message GenericMessage message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    GenericMessage.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a GenericMessage message from the specified reader or buffer.\n     * @function decode\n     * @memberof GenericMessage\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {GenericMessage} GenericMessage\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    GenericMessage.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.GenericMessage();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1: {\n                    message.callId = reader.string();\n                    break;\n                }\n            case 2: {\n                    message.payload = reader.string();\n                    break;\n                }\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        if (!message.hasOwnProperty(\"callId\"))\n            throw $util.ProtocolError(\"missing required 'callId'\", { instance: message });\n        if (!message.hasOwnProperty(\"payload\"))\n            throw $util.ProtocolError(\"missing required 'payload'\", { instance: message });\n        return message;\n    };\n\n    /**\n     * Decodes a GenericMessage message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof GenericMessage\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {GenericMessage} GenericMessage\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    GenericMessage.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a GenericMessage message.\n     * @function verify\n     * @memberof GenericMessage\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    GenericMessage.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (!$util.isString(message.callId))\n            return \"callId: string expected\";\n        if (!$util.isString(message.payload))\n            return \"payload: string expected\";\n        return null;\n    };\n\n    /**\n     * Creates a GenericMessage message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof GenericMessage\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {GenericMessage} GenericMessage\n     */\n    GenericMessage.fromObject = function fromObject(object) {\n        if (object instanceof $root.GenericMessage)\n            return object;\n        var message = new $root.GenericMessage();\n        if (object.callId != null)\n            message.callId = String(object.callId);\n        if (object.payload != null)\n            message.payload = String(object.payload);\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a GenericMessage message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof GenericMessage\n     * @static\n     * @param {GenericMessage} message GenericMessage\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    GenericMessage.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.defaults) {\n            object.callId = \"\";\n            object.payload = \"\";\n        }\n        if (message.callId != null && message.hasOwnProperty(\"callId\"))\n            object.callId = message.callId;\n        if (message.payload != null && message.hasOwnProperty(\"payload\"))\n            object.payload = message.payload;\n        return object;\n    };\n\n    /**\n     * Converts this GenericMessage to JSON.\n     * @function toJSON\n     * @memberof GenericMessage\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    GenericMessage.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    /**\n     * Gets the default type url for GenericMessage\n     * @function getTypeUrl\n     * @memberof GenericMessage\n     * @static\n     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default \"type.googleapis.com\")\n     * @returns {string} The default type url\n     */\n    GenericMessage.getTypeUrl = function getTypeUrl(typeUrlPrefix) {\n        if (typeUrlPrefix === undefined) {\n            typeUrlPrefix = \"type.googleapis.com\";\n        }\n        return typeUrlPrefix + \"/GenericMessage\";\n    };\n\n    return GenericMessage;\n})();\n\nmodule.exports = $root;\n"]}